const { ethers } = require("hardhat");
const { expect, assert } = require("chai");

const big = num => ethers.BigNumber.from(num);
const dataSet = [[1, 1], [2, 3], [3, 3], [4, 1], [5, 3], [6, 1], [7, 3], [8, 1], [9, 1], [10, 1], [11, 1], [12, 1], [13, 1], [14, 4], [15, 1], [16, 1], [17, 1], [18, 1], [19, 2], [20, 4], [21, 3], [22, 3], [23, 3], [24, 1], [25, 3], [26, 1], [27, 1], [28, 3], [29, 3], [30, 2], [31, 1], [32, 1], [33, 3], [34, 1], [35, 3], [36, 3], [37, 1], [38, 3], [39, 3], [40, 3], [41, 2], [42, 2], [43, 1], [44, 1], [45, 3], [46, 1], [47, 1], [48, 3], [49, 2], [50, 1], [51, 2], [52, 3], [53, 3], [54, 3], [55, 3], [56, 1], [57, 1], [58, 3], [59, 3], [60, 1], [61, 3], [62, 1], [63, 1], [64, 4], [65, 3], [66, 3], [67, 3], [68, 3], [69, 1], [70, 1], [71, 3], [72, 3], [73, 4], [74, 1], [75, 1], [76, 3], [77, 1], [78, 1], [79, 3], [80, 4], [81, 3], [82, 3], [83, 3], [84, 1], [85, 1], [86, 1], [87, 1], [88, 1], [89, 3], [90, 3], [91, 3], [92, 1], [93, 1], [94, 1], [95, 1], [96, 1], [97, 3], [98, 1], [99, 1], [100, 1], [101, 2], [102, 3], [103, 3], [104, 3], [105, 3], [106, 1], [107, 1], [108, 1], [109, 2], [110, 1], [111, 2], [112, 3], [113, 2], [114, 3], [115, 1], [116, 1], [117, 1], [118, 3], [119, 1], [120, 4], [121, 3], [122, 1], [123, 1], [124, 4], [125, 1], [126, 1], [127, 3], [128, 1], [129, 4], [130, 1], [131, 1], [132, 3], [133, 1], [134, 3], [135, 1], [136, 1], [137, 1], [138, 2], [139, 3], [140, 3], [141, 3], [142, 3], [143, 1], [144, 3], [145, 3], [146, 1], [147, 1], [148, 4], [149, 1], [150, 1], [151, 3], [152, 4], [153, 1], [154, 3], [155, 1], [156, 1], [157, 4], [158, 3], [159, 3], [160, 1], [161, 3], [162, 3], [163, 1], [164, 1], [165, 1], [166, 1], [167, 3], [168, 2], [169, 3], [170, 1], [171, 1], [172, 1], [173, 1], [174, 3], [175, 1], [176, 3], [177, 1], [178, 3], [179, 1], [180, 4], [181, 3], [182, 1], [183, 3], [184, 3], [185, 1], [186, 3], [187, 2], [188, 1], [189, 1], [190, 1], [191, 1], [192, 3], [193, 2], [194, 3], [195, 1], [196, 1], [197, 3], [198, 2], [199, 1], [200, 3], [201, 3], [202, 1], [203, 3], [204, 1], [205, 2], [206, 3], [207, 1], [208, 1], [209, 3], [210, 1], [211, 3], [212, 1], [213, 3], [214, 2], [215, 3], [216, 4], [217, 1], [218, 1], [219, 1], [220, 1], [221, 2], [222, 3], [223, 3], [224, 1], [225, 3], [226, 5], [227, 1], [228, 1], [229, 4], [230, 2], [231, 4], [232, 3], [233, 1], [234, 3], [235, 1], [236, 3], [237, 1], [238, 1], [239, 3], [240, 1], [241, 3], [242, 1], [243, 1], [244, 3], [245, 1], [246, 3], [247, 3], [248, 3], [249, 1], [250, 3], [251, 1], [252, 1], [253, 1], [254, 2], [255, 1], [256, 3], [257, 1], [258, 1], [259, 3], [260, 2], [261, 1], [262, 4], [263, 3], [264, 4], [265, 3], [266, 3], [267, 3], [268, 1], [269, 4], [270, 1], [271, 1], [272, 3], [273, 1], [274, 1], [275, 1], [276, 3], [277, 1], [278, 3], [279, 1], [280, 3], [281, 1], [282, 1], [283, 4], [284, 5], [285, 3], [286, 1], [287, 1], [288, 1], [289, 2], [290, 1], [291, 2], [292, 3], [293, 3], [294, 1], [295, 3], [296, 1], [297, 1], [298, 3], [299, 3], [300, 3], [301, 2], [302, 1], [303, 3], [304, 1], [305, 3], [306, 4], [307, 1], [308, 3], [309, 2], [310, 4], [311, 1], [312, 2], [313, 1], [314, 4], [315, 1], [316, 3], [317, 1], [318, 1], [319, 1], [320, 1], [321, 1], [322, 3], [323, 1], [324, 3], [325, 4], [326, 3], [327, 1], [328, 4], [329, 1], [330, 5], [331, 1], [332, 1], [333, 3], [334, 3], [335, 3], [336, 3], [337, 3], [338, 1], [339, 1], [340, 1], [341, 1], [342, 1], [343, 1], [344, 1], [345, 1], [346, 3], [347, 2], [348, 1], [349, 2], [350, 2], [351, 2], [352, 3], [353, 1], [354, 1], [355, 3], [356, 3], [357, 1], [358, 3], [359, 1], [360, 3], [361, 1], [362, 3], [363, 3], [364, 3], [365, 3], [366, 3], [367, 1], [368, 1], [369, 2], [370, 3], [371, 3], [372, 2], [373, 2], [374, 1], [375, 1], [376, 2], [377, 2], [378, 5], [379, 1], [380, 1], [381, 1], [382, 3], [383, 3], [384, 1], [385, 2], [386, 3], [387, 1], [388, 2], [389, 2], [390, 1], [391, 3], [392, 1], [393, 4], [394, 4], [395, 3], [396, 2], [397, 1], [398, 3], [399, 3], [400, 2], [401, 1], [402, 1], [403, 3], [404, 2], [405, 3], [406, 3], [407, 3], [408, 3], [409, 1], [410, 1], [411, 1], [412, 1], [413, 2], [414, 3], [415, 3], [416, 3], [417, 3], [418, 3], [419, 1], [420, 4], [421, 3], [422, 4], [423, 1], [424, 1], [425, 3], [426, 3], [427, 3], [428, 3], [429, 1], [430, 3], [431, 1], [432, 1], [433, 2], [434, 1], [435, 1], [436, 3], [437, 1], [438, 1], [439, 1], [440, 1], [441, 1], [442, 3], [443, 3], [444, 3], [445, 1], [446, 1], [447, 1], [448, 3], [449, 3], [450, 3], [451, 1], [452, 1], [453, 1], [454, 3], [455, 4], [456, 1], [457, 3], [458, 3], [459, 1], [460, 1], [461, 1], [462, 1], [463, 3], [464, 3], [465, 2], [466, 1], [467, 3], [468, 3], [469, 1], [470, 1], [471, 1], [472, 3], [473, 1], [474, 3], [475, 3], [476, 1], [477, 1], [478, 3], [479, 1], [480, 4], [481, 1], [482, 1], [483, 3], [484, 1], [485, 4], [486, 1], [487, 1], [488, 1], [489, 3], [490, 3], [491, 1], [492, 3], [493, 3], [494, 3], [495, 3], [496, 1], [497, 3], [498, 1], [499, 4], [500, 1], [501, 1], [502, 1], [503, 3], [504, 3], [505, 3], [506, 3], [507, 1], [508, 3], [509, 3], [510, 2], [511, 1], [512, 3], [513, 4], [514, 3], [515, 1], [516, 3], [517, 1], [518, 3], [519, 1], [520, 4], [521, 3], [522, 3], [523, 3], [524, 1], [525, 3], [526, 1], [527, 1], [528, 3], [529, 1], [530, 1], [531, 3], [532, 3], [533, 3], [534, 3], [535, 1], [536, 3], [537, 1], [538, 3], [539, 1], [540, 3], [541, 3], [542, 1], [543, 1], [544, 2], [545, 1], [546, 1], [547, 2], [548, 1], [549, 1], [550, 1], [551, 5], [552, 1], [553, 3], [554, 3], [555, 3], [556, 3], [557, 3], [558, 3], [559, 2], [560, 1], [561, 3], [562, 3], [563, 3], [564, 1], [565, 4], [566, 1], [567, 4], [568, 1], [569, 1], [570, 3], [571, 1], [572, 1], [573, 1], [574, 3], [575, 1], [576, 3], [577, 5], [578, 3], [579, 3], [580, 1], [581, 3], [582, 1], [583, 3], [584, 1], [585, 1], [586, 1], [587, 3], [588, 3], [589, 3], [590, 1], [591, 1], [592, 1], [593, 1], [594, 1], [595, 3], [596, 1], [597, 5], [598, 3], [599, 3], [600, 1], [601, 3], [602, 1], [603, 1], [604, 1], [605, 1], [606, 1], [607, 3], [608, 4], [609, 1], [610, 2], [611, 1], [612, 2], [613, 3], [614, 1], [615, 1], [616, 3], [617, 1], [618, 1], [619, 3], [620, 1], [621, 2], [622, 1], [623, 1], [624, 3], [625, 2], [626, 1], [627, 3], [628, 3], [629, 3], [630, 3], [631, 4], [632, 1], [633, 3], [634, 1], [635, 2], [636, 2], [637, 4], [638, 4], [639, 3], [640, 2], [641, 1], [642, 1], [643, 1], [644, 1], [645, 1], [646, 1], [647, 1], [648, 1], [649, 3], [650, 3], [651, 1], [652, 3], [653, 3], [654, 1], [655, 1], [656, 1], [657, 3], [658, 1], [659, 1], [660, 1], [661, 1], [662, 1], [663, 1], [664, 3], [665, 1], [666, 3], [667, 3], [668, 1], [669, 1], [670, 3], [671, 4], [672, 1], [673, 3], [674, 1], [675, 2], [676, 1], [677, 1], [678, 3], [679, 1], [680, 3], [681, 1], [682, 3], [683, 2], [684, 1], [685, 1], [686, 1], [687, 1], [688, 3], [689, 1], [690, 1], [691, 3], [692, 1], [693, 1], [694, 3], [695, 1], [696, 1], [697, 3], [698, 1], [699, 3], [700, 1], [701, 3], [702, 1], [703, 1], [704, 1], [705, 1], [706, 3], [707, 3], [708, 1], [709, 1], [710, 3], [711, 1], [712, 3], [713, 1], [714, 3], [715, 4], [716, 1], [717, 3], [718, 3], [719, 3], [720, 3], [721, 1], [722, 4], [723, 3], [724, 1], [725, 2], [726, 2], [727, 1], [728, 2], [729, 1], [730, 1], [731, 3], [732, 2], [733, 3], [734, 3], [735, 1], [736, 3], [737, 3], [738, 1], [739, 1], [740, 3], [741, 3], [742, 2], [743, 2], [744, 3], [745, 3], [746, 2], [747, 1], [748, 1], [749, 3], [750, 3], [751, 1], [752, 3], [753, 1], [754, 4], [755, 1], [756, 1], [757, 1], [758, 1], [759, 1], [760, 3], [761, 1], [762, 1], [763, 5], [764, 3], [765, 3], [766, 3], [767, 3], [768, 1], [769, 2], [770, 3], [771, 1], [772, 3], [773, 1], [774, 1], [775, 4], [776, 3], [777, 1], [778, 1], [779, 1], [780, 1], [781, 3], [782, 5], [783, 1], [784, 1], [785, 1], [786, 4], [787, 1], [788, 1], [789, 3], [790, 2], [791, 3], [792, 1], [793, 1], [794, 1], [795, 1], [796, 1], [797, 4], [798, 1], [799, 3], [800, 1], [801, 1], [802, 2], [803, 1], [804, 1], [805, 3], [806, 1], [807, 2], [808, 3], [809, 2], [810, 1], [811, 1], [812, 3], [813, 3], [814, 3], [815, 3], [816, 3], [817, 1], [818, 3], [819, 1], [820, 1], [821, 3], [822, 1], [823, 1], [824, 1], [825, 4], [826, 3], [827, 1], [828, 1], [829, 1], [830, 1], [831, 1], [832, 3], [833, 1], [834, 2], [835, 2], [836, 3], [837, 4], [838, 2], [839, 3], [840, 1], [841, 1], [842, 4], [843, 3], [844, 1], [845, 1], [846, 1], [847, 1], [848, 1], [849, 2], [850, 1], [851, 1], [852, 2], [853, 1], [854, 4], [855, 1], [856, 3], [857, 3], [858, 1], [859, 1], [860, 1], [861, 3], [862, 4], [863, 3], [864, 2], [865, 1], [866, 1], [867, 1], [868, 1], [869, 3], [870, 3], [871, 1], [872, 4], [873, 3], [874, 1], [875, 1], [876, 1], [877, 1], [878, 1], [879, 3], [880, 3], [881, 1], [882, 2], [883, 1], [884, 1], [885, 4], [886, 1], [887, 3], [888, 1], [889, 1], [890, 1], [891, 1], [892, 4], [893, 3], [894, 2], [895, 3], [896, 2], [897, 2], [898, 2], [899, 1], [900, 1], [901, 1], [902, 2], [903, 1], [904, 3], [905, 1], [906, 3], [907, 4], [908, 3], [909, 3], [910, 3], [911, 1], [912, 1], [913, 1], [914, 1], [915, 3], [916, 1], [917, 1], [918, 1], [919, 1], [920, 4], [921, 3], [922, 3], [923, 1], [924, 1], [925, 3], [926, 1], [927, 1], [928, 3], [929, 2], [930, 1], [931, 1], [932, 1], [933, 1], [934, 1], [935, 3], [936, 3], [937, 1], [938, 1], [939, 1], [940, 5], [941, 1], [942, 1], [943, 3], [944, 2], [945, 3], [946, 1], [947, 1], [948, 3], [949, 3], [950, 1], [951, 4], [952, 1], [953, 3], [954, 3], [955, 4], [956, 3], [957, 3], [958, 4], [959, 1], [960, 3], [961, 1], [962, 1], [963, 1], [964, 1], [965, 1], [966, 2], [967, 3], [968, 4], [969, 1], [970, 1], [971, 1], [972, 1], [973, 3], [974, 3], [975, 4], [976, 1], [977, 3], [978, 3], [979, 1], [980, 1], [981, 1], [982, 3], [983, 1], [984, 1], [985, 3], [986, 3], [987, 3], [988, 1], [989, 3], [990, 3], [991, 1], [992, 1], [993, 3], [994, 3], [995, 1], [996, 1], [997, 1], [998, 1], [999, 2], [1000, 4], [1001, 1], [1002, 2], [1003, 1], [1004, 3], [1005, 3], [1006, 3], [1007, 1], [1008, 1], [1009, 1], [1010, 3], [1011, 3], [1012, 1], [1013, 1], [1014, 3], [1015, 3], [1016, 1], [1017, 4], [1018, 3], [1019, 1], [1020, 1], [1021, 1], [1022, 2], [1023, 2], [1024, 1], [1025, 3], [1026, 1], [1027, 3], [1028, 1], [1029, 3], [1030, 4], [1031, 3], [1032, 1], [1033, 3], [1034, 1], [1035, 3], [1036, 1], [1037, 3], [1038, 3], [1039, 1], [1040, 1], [1041, 1], [1042, 3], [1043, 1], [1044, 3], [1045, 1], [1046, 3], [1047, 1], [1048, 1], [1049, 3], [1050, 1], [1051, 3], [1052, 3], [1053, 1], [1054, 1], [1055, 2], [1056, 2], [1057, 3], [1058, 1], [1059, 1], [1060, 3], [1061, 1], [1062, 3], [1063, 1], [1064, 1], [1065, 1], [1066, 1], [1067, 1], [1068, 3], [1069, 1], [1070, 3], [1071, 1], [1072, 1], [1073, 1], [1074, 3], [1075, 3], [1076, 1], [1077, 4], [1078, 1], [1079, 3], [1080, 3], [1081, 3], [1082, 1], [1083, 1], [1084, 1], [1085, 3], [1086, 3], [1087, 3], [1088, 1], [1089, 3], [1090, 1], [1091, 3], [1092, 1], [1093, 1], [1094, 3], [1095, 1], [1096, 1], [1097, 1], [1098, 1], [1099, 1], [1100, 4], [1101, 1], [1102, 2], [1103, 3], [1104, 2], [1105, 3], [1106, 3], [1107, 1], [1108, 4], [1109, 3], [1110, 2], [1111, 3], [1112, 2], [1113, 1], [1114, 1], [1115, 1], [1116, 2], [1117, 3], [1118, 3], [1119, 1], [1120, 1], [1121, 1], [1122, 1], [1123, 1], [1124, 1], [1125, 4], [1126, 1], [1127, 1], [1128, 2], [1129, 3], [1130, 3], [1131, 3], [1132, 1], [1133, 1], [1134, 3], [1135, 4], [1136, 1], [1137, 3], [1138, 1], [1139, 1], [1140, 1], [1141, 3], [1142, 3], [1143, 1], [1144, 3], [1145, 3], [1146, 3], [1147, 1], [1148, 1], [1149, 3], [1150, 1], [1151, 1], [1152, 3], [1153, 1], [1154, 1], [1155, 3], [1156, 1], [1157, 1], [1158, 1], [1159, 3], [1160, 1], [1161, 1], [1162, 2], [1163, 2], [1164, 3], [1165, 1], [1166, 1], [1167, 2], [1168, 1], [1169, 5], [1170, 3], [1171, 1], [1172, 3], [1173, 1], [1174, 1], [1175, 1], [1176, 3], [1177, 1], [1178, 3], [1179, 1], [1180, 3], [1181, 1], [1182, 1], [1183, 4], [1184, 1], [1185, 2], [1186, 1], [1187, 1], [1188, 2], [1189, 1], [1190, 3], [1191, 1], [1192, 2], [1193, 1], [1194, 1], [1195, 3], [1196, 1], [1197, 1], [1198, 1], [1199, 1], [1200, 3], [1201, 5], [1202, 1], [1203, 1], [1204, 1], [1205, 1], [1206, 3], [1207, 1], [1208, 1], [1209, 3], [1210, 1], [1211, 3], [1212, 3], [1213, 3], [1214, 3], [1215, 5], [1216, 1], [1217, 1], [1218, 1], [1219, 1], [1220, 1], [1221, 1], [1222, 3], [1223, 3], [1224, 3], [1225, 1], [1226, 1], [1227, 1], [1228, 1], [1229, 1], [1230, 1], [1231, 1], [1232, 3], [1233, 3], [1234, 1], [1235, 1], [1236, 1], [1237, 1], [1238, 1], [1239, 1], [1240, 2], [1241, 1], [1242, 2], [1243, 1], [1244, 2], [1245, 1], [1246, 1], [1247, 1], [1248, 3], [1249, 1], [1250, 1], [1251, 4], [1252, 1], [1253, 3], [1254, 1], [1255, 3], [1256, 1], [1257, 1], [1258, 1], [1259, 1], [1260, 1], [1261, 4], [1262, 3], [1263, 3], [1264, 1], [1265, 3], [1266, 1], [1267, 3], [1268, 3], [1269, 3], [1270, 1], [1271, 2], [1272, 3], [1273, 3], [1274, 1], [1275, 2], [1276, 1], [1277, 1], [1278, 1], [1279, 1], [1280, 1], [1281, 2], [1282, 3], [1283, 1], [1284, 2], [1285, 3], [1286, 2], [1287, 3], [1288, 3], [1289, 1], [1290, 1], [1291, 1], [1292, 1], [1293, 1], [1294, 1], [1295, 1], [1296, 3], [1297, 3], [1298, 1], [1299, 1], [1300, 2], [1301, 1], [1302, 3], [1303, 1], [1304, 1], [1305, 3], [1306, 1], [1307, 2], [1308, 3], [1309, 1], [1310, 3], [1311, 1], [1312, 3], [1313, 1], [1314, 1], [1315, 3], [1316, 1], [1317, 1], [1318, 1], [1319, 1], [1320, 1], [1321, 1], [1322, 1], [1323, 1], [1324, 3], [1325, 3], [1326, 1], [1327, 2], [1328, 4], [1329, 1], [1330, 1], [1331, 1], [1332, 2], [1333, 3], [1334, 2], [1335, 1], [1336, 1], [1337, 1], [1338, 1], [1339, 1], [1340, 1], [1341, 1], [1342, 2], [1343, 3], [1344, 1], [1345, 1], [1346, 3], [1347, 2], [1348, 1], [1349, 3], [1350, 1], [1351, 1], [1352, 1], [1353, 3], [1354, 1], [1355, 3], [1356, 1], [1357, 3], [1358, 2], [1359, 1], [1360, 2], [1361, 3], [1362, 1], [1363, 2], [1364, 2], [1365, 3], [1366, 1], [1367, 1], [1368, 1], [1369, 1], [1370, 1], [1371, 1], [1372, 1], [1373, 3], [1374, 1], [1375, 1], [1376, 1], [1377, 3], [1378, 3], [1379, 1], [1380, 3], [1381, 1], [1382, 2], [1383, 1], [1384, 3], [1385, 1], [1386, 1], [1387, 3], [1388, 3], [1389, 2], [1390, 1], [1391, 3], [1392, 1], [1393, 1], [1394, 1], [1395, 3], [1396, 3], [1397, 2], [1398, 2], [1399, 1], [1400, 1], [1401, 1], [1402, 3], [1403, 3], [1404, 3], [1405, 3], [1406, 1], [1407, 3], [1408, 3], [1409, 1], [1410, 1], [1411, 1], [1412, 1], [1413, 3], [1414, 1], [1415, 3], [1416, 1], [1417, 1], [1418, 1], [1419, 1], [1420, 1], [1421, 1], [1422, 2], [1423, 2], [1424, 2], [1425, 3], [1426, 1], [1427, 1], [1428, 2], [1429, 3], [1430, 2], [1431, 1], [1432, 1], [1433, 1], [1434, 1], [1435, 3], [1436, 1], [1437, 1], [1438, 3], [1439, 3], [1440, 3], [1441, 3], [1442, 3], [1443, 2], [1444, 3], [1445, 2], [1446, 3], [1447, 3], [1448, 3], [1449, 3], [1450, 1], [1451, 1], [1452, 1], [1453, 1], [1454, 1], [1455, 1], [1456, 1], [1457, 2], [1458, 1], [1459, 3], [1460, 3], [1461, 2], [1462, 4], [1463, 3], [1464, 2], [1465, 2], [1466, 4], [1467, 3], [1468, 3], [1469, 1], [1470, 1], [1471, 1], [1472, 3], [1473, 3], [1474, 1], [1475, 1], [1476, 1], [1477, 2], [1478, 3], [1479, 1], [1480, 1], [1481, 1], [1482, 4], [1483, 1], [1484, 1], [1485, 3], [1486, 1], [1487, 1], [1488, 1], [1489, 4], [1490, 1], [1491, 1], [1492, 3], [1493, 4], [1494, 3], [1495, 1], [1496, 1], [1497, 1], [1498, 1], [1499, 1], [1500, 1], [1501, 3], [1502, 3], [1503, 1], [1504, 1], [1505, 2], [1506, 4], [1507, 1], [1508, 3], [1509, 3], [1510, 1], [1511, 2], [1512, 1], [1513, 2], [1514, 3], [1515, 1], [1516, 1], [1517, 2], [1518, 1], [1519, 1], [1520, 3], [1521, 3], [1522, 3], [1523, 2], [1524, 1], [1525, 2], [1526, 3], [1527, 3], [1528, 4], [1529, 1], [1530, 1], [1531, 1], [1532, 3], [1533, 3], [1534, 1], [1535, 1], [1536, 1], [1537, 1], [1538, 2], [1539, 3], [1540, 1], [1541, 3], [1542, 3], [1543, 3], [1544, 1], [1545, 3], [1546, 3], [1547, 2], [1548, 1], [1549, 5], [1550, 3], [1551, 3], [1552, 3], [1553, 2], [1554, 3], [1555, 3], [1556, 3], [1557, 1], [1558, 1], [1559, 3], [1560, 3], [1561, 1], [1562, 1], [1563, 4], [1564, 3], [1565, 1], [1566, 1], [1567, 3], [1568, 1], [1569, 2], [1570, 1], [1571, 3], [1572, 1], [1573, 1], [1574, 1], [1575, 1], [1576, 3], [1577, 3], [1578, 3], [1579, 1], [1580, 3], [1581, 1], [1582, 4], [1583, 3], [1584, 3], [1585, 3], [1586, 1], [1587, 2], [1588, 2], [1589, 1], [1590, 3], [1591, 3], [1592, 2], [1593, 1], [1594, 1], [1595, 3], [1596, 1], [1597, 1], [1598, 1], [1599, 5], [1600, 1], [1601, 1], [1602, 1], [1603, 1], [1604, 3], [1605, 3], [1606, 3], [1607, 3], [1608, 4], [1609, 1], [1610, 1], [1611, 3], [1612, 3], [1613, 3], [1614, 3], [1615, 3], [1616, 3], [1617, 1], [1618, 3], [1619, 3], [1620, 1], [1621, 1], [1622, 3], [1623, 3], [1624, 1], [1625, 1], [1626, 1], [1627, 1], [1628, 3], [1629, 3], [1630, 4], [1631, 4], [1632, 3], [1633, 4], [1634, 3], [1635, 3], [1636, 1], [1637, 1], [1638, 2], [1639, 1], [1640, 1], [1641, 3], [1642, 1], [1643, 1], [1644, 3], [1645, 3], [1646, 3], [1647, 1], [1648, 1], [1649, 1], [1650, 3], [1651, 1], [1652, 1], [1653, 3], [1654, 1], [1655, 1], [1656, 3], [1657, 1], [1658, 3], [1659, 3], [1660, 3], [1661, 3], [1662, 1], [1663, 1], [1664, 1], [1665, 4], [1666, 1], [1667, 1], [1668, 1], [1669, 1], [1670, 3], [1671, 3], [1672, 1], [1673, 1], [1674, 4], [1675, 3], [1676, 4], [1677, 1], [1678, 1], [1679, 1], [1680, 2], [1681, 3], [1682, 3], [1683, 2], [1684, 3], [1685, 3], [1686, 2], [1687, 3], [1688, 5], [1689, 3], [1690, 1], [1691, 1], [1692, 3], [1693, 1], [1694, 3], [1695, 4], [1696, 1], [1697, 3], [1698, 3], [1699, 1], [1700, 3], [1701, 1], [1702, 1], [1703, 3], [1704, 1], [1705, 3], [1706, 3], [1707, 1], [1708, 2], [1709, 3], [1710, 1], [1711, 3], [1712, 3], [1713, 1], [1714, 1], [1715, 3], [1716, 1], [1717, 1], [1718, 3], [1719, 3], [1720, 4], [1721, 3], [1722, 3], [1723, 1], [1724, 1], [1725, 1], [1726, 3], [1727, 1], [1728, 3], [1729, 1], [1730, 1], [1731, 3], [1732, 3], [1733, 1], [1734, 1], [1735, 3], [1736, 4], [1737, 3], [1738, 1], [1739, 1], [1740, 3], [1741, 1], [1742, 2], [1743, 2], [1744, 3], [1745, 3], [1746, 3], [1747, 1], [1748, 1], [1749, 2], [1750, 4], [1751, 1], [1752, 3], [1753, 3], [1754, 1], [1755, 4], [1756, 1], [1757, 2], [1758, 1], [1759, 1], [1760, 1], [1761, 4], [1762, 3], [1763, 3], [1764, 1], [1765, 1], [1766, 1], [1767, 1], [1768, 1], [1769, 3], [1770, 1], [1771, 1], [1772, 1], [1773, 2], [1774, 1], [1775, 1], [1776, 4], [1777, 3], [1778, 1], [1779, 3], [1780, 2], [1781, 1], [1782, 1], [1783, 1], [1784, 1], [1785, 3], [1786, 3], [1787, 3], [1788, 1], [1789, 1], [1790, 1], [1791, 2], [1792, 1], [1793, 3], [1794, 3], [1795, 1], [1796, 1], [1797, 1], [1798, 1], [1799, 1], [1800, 3], [1801, 3], [1802, 3], [1803, 1], [1804, 3], [1805, 1], [1806, 1], [1807, 1], [1808, 4], [1809, 3], [1810, 1], [1811, 2], [1812, 1], [1813, 1], [1814, 1], [1815, 1], [1816, 1], [1817, 1], [1818, 3], [1819, 1], [1820, 3], [1821, 3], [1822, 3], [1823, 1], [1824, 3], [1825, 1], [1826, 2], [1827, 1], [1828, 3], [1829, 1], [1830, 1], [1831, 1], [1832, 2], [1833, 3], [1834, 1], [1835, 3], [1836, 1], [1837, 1], [1838, 1], [1839, 3], [1840, 3], [1841, 1], [1842, 3], [1843, 1], [1844, 3], [1845, 1], [1846, 3], [1847, 1], [1848, 1], [1849, 4], [1850, 2], [1851, 4], [1852, 2], [1853, 1], [1854, 1], [1855, 1], [1856, 1], [1857, 1], [1858, 3], [1859, 3], [1860, 3], [1861, 1], [1862, 3], [1863, 4], [1864, 4], [1865, 1], [1866, 1], [1867, 3], [1868, 1], [1869, 3], [1870, 3], [1871, 1], [1872, 1], [1873, 3], [1874, 1], [1875, 2], [1876, 2], [1877, 4], [1878, 2], [1879, 3], [1880, 4], [1881, 1], [1882, 3], [1883, 1], [1884, 1], [1885, 1], [1886, 1], [1887, 3], [1888, 1], [1889, 3], [1890, 2], [1891, 1], [1892, 1], [1893, 3], [1894, 1], [1895, 4], [1896, 3], [1897, 3], [1898, 1], [1899, 3], [1900, 1], [1901, 4], [1902, 1], [1903, 3], [1904, 1], [1905, 3], [1906, 3], [1907, 3], [1908, 3], [1909, 2], [1910, 1], [1911, 3], [1912, 1], [1913, 3], [1914, 1], [1915, 1], [1916, 3], [1917, 1], [1918, 2], [1919, 3], [1920, 1], [1921, 1], [1922, 2], [1923, 1], [1924, 1], [1925, 3], [1926, 1], [1927, 3], [1928, 3], [1929, 1], [1930, 1], [1931, 3], [1932, 1], [1933, 1], [1934, 1], [1935, 4], [1936, 3], [1937, 1], [1938, 1], [1939, 3], [1940, 1], [1941, 3], [1942, 1], [1943, 1], [1944, 1], [1945, 1], [1946, 1], [1947, 3], [1948, 1], [1949, 1], [1950, 3], [1951, 5], [1952, 3], [1953, 3], [1954, 3], [1955, 1], [1956, 1], [1957, 1], [1958, 4], [1959, 3], [1960, 2], [1961, 3], [1962, 2], [1963, 3], [1964, 1], [1965, 2], [1966, 1], [1967, 3], [1968, 1], [1969, 1], [1970, 3], [1971, 2], [1972, 1], [1973, 1], [1974, 2], [1975, 3], [1976, 4], [1977, 1], [1978, 4], [1979, 3], [1980, 1], [1981, 1], [1982, 4], [1983, 2], [1984, 2], [1985, 5], [1986, 3], [1987, 3], [1988, 1], [1989, 4], [1990, 3], [1991, 4], [1992, 3], [1993, 3], [1994, 1], [1995, 1], [1996, 1], [1997, 3], [1998, 1], [1999, 3], [2000, 1], [2001, 1], [2002, 1], [2003, 3], [2004, 3], [2005, 3], [2006, 1], [2007, 1], [2008, 4], [2009, 1], [2010, 1], [2011, 1], [2012, 1], [2013, 1], [2014, 2], [2015, 3], [2016, 3], [2017, 1], [2018, 1], [2019, 1], [2020, 1], [2021, 1], [2022, 1], [2023, 3], [2024, 2], [2025, 1], [2026, 3], [2027, 1], [2028, 3], [2029, 5], [2030, 3], [2031, 4], [2032, 2], [2033, 2], [2034, 3], [2035, 1], [2036, 2], [2037, 3], [2038, 1], [2039, 1], [2040, 1], [2041, 1], [2042, 2], [2043, 1], [2044, 1], [2045, 1], [2046, 3], [2047, 3], [2048, 3], [2049, 3], [2050, 1], [2051, 1], [2052, 1], [2053, 1], [2054, 1], [2055, 2], [2056, 2], [2057, 2], [2058, 2], [2059, 3], [2060, 2], [2061, 1], [2062, 1], [2063, 4], [2064, 1], [2065, 3], [2066, 1], [2067, 2], [2068, 3], [2069, 1], [2070, 1], [2071, 3], [2072, 3], [2073, 1], [2074, 3], [2075, 2], [2076, 3], [2077, 2], [2078, 1], [2079, 3], [2080, 3], [2081, 3], [2082, 1], [2083, 1], [2084, 3], [2085, 1], [2086, 3], [2087, 2], [2088, 4], [2089, 1], [2090, 3], [2091, 1], [2092, 1], [2093, 3], [2094, 1], [2095, 3], [2096, 1], [2097, 3], [2098, 1], [2099, 3], [2100, 3], [2101, 3], [2102, 4], [2103, 1], [2104, 1], [2105, 3], [2106, 1], [2107, 1], [2108, 3], [2109, 3], [2110, 1], [2111, 1], [2112, 1], [2113, 2], [2114, 1], [2115, 1], [2116, 1], [2117, 5], [2118, 3], [2119, 1], [2120, 1], [2121, 1], [2122, 1], [2123, 4], [2124, 3], [2125, 2], [2126, 1], [2127, 1], [2128, 3], [2129, 1], [2130, 5], [2131, 3], [2132, 1], [2133, 1], [2134, 1], [2135, 1], [2136, 3], [2137, 2], [2138, 3], [2139, 2], [2140, 3], [2141, 3], [2142, 1], [2143, 1], [2144, 3], [2145, 4], [2146, 1], [2147, 1], [2148, 1], [2149, 1], [2150, 1], [2151, 1], [2152, 1], [2153, 1], [2154, 1], [2155, 1], [2156, 3], [2157, 2], [2158, 1], [2159, 1], [2160, 1], [2161, 4], [2162, 4], [2163, 1], [2164, 1], [2165, 1], [2166, 3], [2167, 1], [2168, 3], [2169, 2], [2170, 1], [2171, 4], [2172, 3], [2173, 3], [2174, 1], [2175, 4], [2176, 3], [2177, 1], [2178, 1], [2179, 1], [2180, 1], [2181, 1], [2182, 3], [2183, 3], [2184, 1], [2185, 1], [2186, 1], [2187, 1], [2188, 3], [2189, 1], [2190, 1], [2191, 1], [2192, 1], [2193, 3], [2194, 1], [2195, 2], [2196, 2], [2197, 3], [2198, 1], [2199, 1], [2200, 2], [2201, 2], [2202, 1], [2203, 4], [2204, 1], [2205, 2], [2206, 1], [2207, 3], [2208, 1], [2209, 3], [2210, 1], [2211, 1], [2212, 1], [2213, 3], [2214, 1], [2215, 1], [2216, 3], [2217, 2], [2218, 3], [2219, 1], [2220, 2], [2221, 1], [2222, 3], [2223, 1], [2224, 1], [2225, 1], [2226, 1], [2227, 2], [2228, 1], [2229, 1], [2230, 1], [2231, 1], [2232, 1], [2233, 2], [2234, 1], [2235, 2], [2236, 4], [2237, 1], [2238, 1], [2239, 3], [2240, 3], [2241, 3], [2242, 3], [2243, 3], [2244, 1], [2245, 1], [2246, 1], [2247, 2], [2248, 3], [2249, 3], [2250, 1], [2251, 3], [2252, 1], [2253, 4], [2254, 1], [2255, 4], [2256, 3], [2257, 1], [2258, 3], [2259, 1], [2260, 1], [2261, 1], [2262, 3], [2263, 4], [2264, 3], [2265, 3], [2266, 3], [2267, 3], [2268, 3], [2269, 2], [2270, 1], [2271, 1], [2272, 2], [2273, 3], [2274, 1], [2275, 1], [2276, 3], [2277, 2], [2278, 2], [2279, 1], [2280, 3], [2281, 1], [2282, 1], [2283, 3], [2284, 1], [2285, 1], [2286, 1], [2287, 3], [2288, 1], [2289, 1], [2290, 4], [2291, 2], [2292, 3], [2293, 1], [2294, 2], [2295, 1], [2296, 1], [2297, 1], [2298, 4], [2299, 1], [2300, 1], [2301, 5], [2302, 1], [2303, 3], [2304, 1], [2305, 1], [2306, 1], [2307, 1], [2308, 1], [2309, 3], [2310, 3], [2311, 1], [2312, 1], [2313, 1], [2314, 3], [2315, 1], [2316, 1], [2317, 1], [2318, 2], [2319, 3], [2320, 3], [2321, 2], [2322, 1], [2323, 3], [2324, 1], [2325, 3], [2326, 4], [2327, 1], [2328, 3], [2329, 1], [2330, 3], [2331, 3], [2332, 1], [2333, 3], [2334, 2], [2335, 3], [2336, 3], [2337, 2], [2338, 1], [2339, 2], [2340, 3], [2341, 2], [2342, 2], [2343, 1], [2344, 1], [2345, 1], [2346, 1], [2347, 3], [2348, 4], [2349, 1], [2350, 3], [2351, 1], [2352, 3], [2353, 3], [2354, 2], [2355, 2], [2356, 1], [2357, 1], [2358, 1], [2359, 3], [2360, 3], [2361, 1], [2362, 1], [2363, 1], [2364, 5], [2365, 3], [2366, 1], [2367, 1], [2368, 3], [2369, 1], [2370, 1], [2371, 1], [2372, 1], [2373, 1], [2374, 1], [2375, 1], [2376, 4], [2377, 1], [2378, 4], [2379, 3], [2380, 2], [2381, 1], [2382, 3], [2383, 3], [2384, 2], [2385, 1], [2386, 1], [2387, 2], [2388, 3], [2389, 4], [2390, 1], [2391, 1], [2392, 3], [2393, 3], [2394, 1], [2395, 1], [2396, 1], [2397, 1], [2398, 1], [2399, 3], [2400, 1], [2401, 1], [2402, 1], [2403, 3], [2404, 1], [2405, 4], [2406, 1], [2407, 3], [2408, 1], [2409, 1], [2410, 2], [2411, 1], [2412, 3], [2413, 1], [2414, 2], [2415, 1], [2416, 1], [2417, 3], [2418, 2], [2419, 1], [2420, 3], [2421, 1], [2422, 1], [2423, 1], [2424, 1], [2425, 3], [2426, 3], [2427, 1], [2428, 3], [2429, 1], [2430, 3], [2431, 1], [2432, 1], [2433, 1], [2434, 3], [2435, 1], [2436, 1], [2437, 3], [2438, 1], [2439, 3], [2440, 5], [2441, 3], [2442, 2], [2443, 1], [2444, 1], [2445, 1], [2446, 1], [2447, 3], [2448, 3], [2449, 1], [2450, 1], [2451, 1], [2452, 1], [2453, 3], [2454, 3], [2455, 1], [2456, 2], [2457, 4], [2458, 2], [2459, 1], [2460, 1], [2461, 4], [2462, 2], [2463, 1], [2464, 3], [2465, 3], [2466, 1], [2467, 2], [2468, 1], [2469, 1], [2470, 1], [2471, 1], [2472, 3], [2473, 1], [2474, 3], [2475, 2], [2476, 2], [2477, 1], [2478, 3], [2479, 1], [2480, 1], [2481, 2], [2482, 3], [2483, 1], [2484, 1], [2485, 2], [2486, 2], [2487, 1], [2488, 3], [2489, 1], [2490, 3], [2491, 2], [2492, 1], [2493, 4], [2494, 1], [2495, 1], [2496, 1], [2497, 1], [2498, 1], [2499, 1], [2500, 1], [2501, 2], [2502, 1], [2503, 3], [2504, 1], [2505, 3], [2506, 1], [2507, 1], [2508, 3], [2509, 3], [2510, 1], [2511, 2], [2512, 1], [2513, 1], [2514, 1], [2515, 3], [2516, 1], [2517, 2], [2518, 2], [2519, 1], [2520, 1], [2521, 4], [2522, 1], [2523, 1], [2524, 1], [2525, 1], [2526, 3], [2527, 1], [2528, 1], [2529, 3], [2530, 1], [2531, 1], [2532, 1], [2533, 1], [2534, 1], [2535, 3], [2536, 3], [2537, 1], [2538, 1], [2539, 3], [2540, 1], [2541, 1], [2542, 4], [2543, 3], [2544, 3], [2545, 3], [2546, 1], [2547, 3], [2548, 3], [2549, 3], [2550, 1], [2551, 4], [2552, 3], [2553, 1], [2554, 1], [2555, 3], [2556, 2], [2557, 3], [2558, 3], [2559, 3], [2560, 3], [2561, 1], [2562, 3], [2563, 5], [2564, 1], [2565, 3], [2566, 1], [2567, 1], [2568, 3], [2569, 1], [2570, 1], [2571, 1], [2572, 3], [2573, 3], [2574, 4], [2575, 1], [2576, 1], [2577, 1], [2578, 1], [2579, 1], [2580, 1], [2581, 1], [2582, 2], [2583, 2], [2584, 1], [2585, 3], [2586, 2], [2587, 3], [2588, 1], [2589, 3], [2590, 1], [2591, 3], [2592, 1], [2593, 3], [2594, 1], [2595, 3], [2596, 3], [2597, 1], [2598, 2], [2599, 3], [2600, 3], [2601, 3], [2602, 1], [2603, 1], [2604, 1], [2605, 1], [2606, 3], [2607, 3], [2608, 4], [2609, 1], [2610, 1], [2611, 1], [2612, 2], [2613, 1], [2614, 1], [2615, 1], [2616, 3], [2617, 4], [2618, 1], [2619, 3], [2620, 3], [2621, 1], [2622, 1], [2623, 1], [2624, 1], [2625, 4], [2626, 2], [2627, 1], [2628, 1], [2629, 1], [2630, 1], [2631, 3], [2632, 3], [2633, 4], [2634, 3], [2635, 3], [2636, 2], [2637, 1], [2638, 1], [2639, 1], [2640, 3], [2641, 3], [2642, 3], [2643, 1], [2644, 2], [2645, 1], [2646, 1], [2647, 2], [2648, 2], [2649, 1], [2650, 2], [2651, 3], [2652, 1], [2653, 2], [2654, 1], [2655, 1], [2656, 2], [2657, 3], [2658, 3], [2659, 1], [2660, 3], [2661, 3], [2662, 3], [2663, 1], [2664, 1], [2665, 1], [2666, 3], [2667, 3], [2668, 2], [2669, 1], [2670, 3], [2671, 3], [2672, 3], [2673, 3], [2674, 1], [2675, 3], [2676, 3], [2677, 1], [2678, 1], [2679, 2], [2680, 3], [2681, 3], [2682, 1], [2683, 3], [2684, 3], [2685, 3], [2686, 1], [2687, 3], [2688, 1], [2689, 3], [2690, 1], [2691, 1], [2692, 3], [2693, 1], [2694, 1], [2695, 1], [2696, 3], [2697, 1], [2698, 3], [2699, 1], [2700, 1], [2701, 1], [2702, 1], [2703, 3], [2704, 3], [2705, 5], [2706, 1], [2707, 4], [2708, 2], [2709, 2], [2710, 3], [2711, 1], [2712, 1], [2713, 1], [2714, 1], [2715, 1], [2716, 1], [2717, 1], [2718, 1], [2719, 1], [2720, 1], [2721, 1], [2722, 3], [2723, 1], [2724, 3], [2725, 4], [2726, 3], [2727, 3], [2728, 1], [2729, 1], [2730, 1], [2731, 3], [2732, 1], [2733, 1], [2734, 1], [2735, 4], [2736, 3], [2737, 2], [2738, 1], [2739, 1], [2740, 1], [2741, 3], [2742, 3], [2743, 1], [2744, 1], [2745, 5], [2746, 1], [2747, 3], [2748, 4], [2749, 2], [2750, 3], [2751, 3], [2752, 4], [2753, 3], [2754, 1], [2755, 2], [2756, 3], [2757, 3], [2758, 3], [2759, 4], [2760, 1], [2761, 3], [2762, 2], [2763, 3], [2764, 1], [2765, 1], [2766, 2], [2767, 3], [2768, 3], [2769, 1], [2770, 1], [2771, 3], [2772, 1], [2773, 1], [2774, 3], [2775, 1], [2776, 1], [2777, 1], [2778, 1], [2779, 2], [2780, 1], [2781, 1], [2782, 3], [2783, 1], [2784, 2], [2785, 1], [2786, 2], [2787, 1], [2788, 1], [2789, 3], [2790, 1], [2791, 3], [2792, 2], [2793, 1], [2794, 3], [2795, 2], [2796, 1], [2797, 1], [2798, 1], [2799, 1], [2800, 1], [2801, 4], [2802, 3], [2803, 1], [2804, 1], [2805, 1], [2806, 3], [2807, 1], [2808, 1], [2809, 1], [2810, 3], [2811, 1], [2812, 3], [2813, 1], [2814, 3], [2815, 1], [2816, 3], [2817, 1], [2818, 1], [2819, 5], [2820, 3], [2821, 1], [2822, 1], [2823, 3], [2824, 3], [2825, 1], [2826, 3], [2827, 2], [2828, 1], [2829, 3], [2830, 1], [2831, 1], [2832, 4], [2833, 1], [2834, 3], [2835, 1], [2836, 1], [2837, 3], [2838, 1], [2839, 3], [2840, 3], [2841, 1], [2842, 3], [2843, 3], [2844, 1], [2845, 1], [2846, 1], [2847, 2], [2848, 3], [2849, 1], [2850, 3], [2851, 5], [2852, 3], [2853, 4], [2854, 3], [2855, 3], [2856, 1], [2857, 4], [2858, 4], [2859, 2], [2860, 1], [2861, 3], [2862, 1], [2863, 1], [2864, 3], [2865, 1], [2866, 1], [2867, 1], [2868, 3], [2869, 2], [2870, 3], [2871, 1], [2872, 3], [2873, 1], [2874, 3], [2875, 1], [2876, 4], [2877, 1], [2878, 1], [2879, 3], [2880, 3], [2881, 1], [2882, 1], [2883, 3], [2884, 1], [2885, 1], [2886, 1], [2887, 3], [2888, 1], [2889, 4], [2890, 1], [2891, 3], [2892, 1], [2893, 1], [2894, 1], [2895, 2], [2896, 3], [2897, 3], [2898, 1], [2899, 1], [2900, 3], [2901, 4], [2902, 1], [2903, 1], [2904, 3], [2905, 1], [2906, 3], [2907, 3], [2908, 3], [2909, 1], [2910, 1], [2911, 1], [2912, 3], [2913, 1], [2914, 3], [2915, 2], [2916, 1], [2917, 1], [2918, 1], [2919, 2], [2920, 1], [2921, 2], [2922, 1], [2923, 1], [2924, 1], [2925, 1], [2926, 3], [2927, 2], [2928, 2], [2929, 1], [2930, 4], [2931, 1], [2932, 1], [2933, 1], [2934, 1], [2935, 3], [2936, 1], [2937, 1], [2938, 3], [2939, 3], [2940, 2], [2941, 1], [2942, 3], [2943, 1], [2944, 3], [2945, 1], [2946, 3], [2947, 3], [2948, 1], [2949, 3], [2950, 3], [2951, 3], [2952, 3], [2953, 3], [2954, 1], [2955, 2], [2956, 3], [2957, 2], [2958, 1], [2959, 3], [2960, 1], [2961, 3], [2962, 1], [2963, 2], [2964, 1], [2965, 1], [2966, 1], [2967, 1], [2968, 2], [2969, 1], [2970, 3], [2971, 5], [2972, 1], [2973, 3], [2974, 1], [2975, 1], [2976, 1], [2977, 1], [2978, 1], [2979, 1], [2980, 3], [2981, 1], [2982, 3], [2983, 3], [2984, 1], [2985, 1], [2986, 1], [2987, 1], [2988, 1], [2989, 1], [2990, 1], [2991, 2], [2992, 4], [2993, 1], [2994, 3], [2995, 3], [2996, 3], [2997, 3], [2998, 1], [2999, 3], [3000, 3], [3001, 1], [3002, 1], [3003, 3], [3004, 2], [3005, 3], [3006, 1], [3007, 3], [3008, 1], [3009, 3], [3010, 3], [3011, 3], [3012, 1], [3013, 3], [3014, 2], [3015, 1], [3016, 3], [3017, 4], [3018, 1], [3019, 1], [3020, 3], [3021, 3], [3022, 1], [3023, 2], [3024, 3], [3025, 1], [3026, 1], [3027, 3], [3028, 3], [3029, 1], [3030, 1], [3031, 1], [3032, 2], [3033, 1], [3034, 1], [3035, 3], [3036, 1], [3037, 1], [3038, 3], [3039, 1], [3040, 3], [3041, 2], [3042, 3], [3043, 3], [3044, 1], [3045, 3], [3046, 1], [3047, 1], [3048, 1], [3049, 3], [3050, 4], [3051, 1], [3052, 1], [3053, 2], [3054, 2], [3055, 3], [3056, 1], [3057, 1], [3058, 1], [3059, 1], [3060, 1], [3061, 3], [3062, 1], [3063, 3], [3064, 1], [3065, 2], [3066, 4], [3067, 4], [3068, 1], [3069, 1], [3070, 4], [3071, 4], [3072, 3], [3073, 1], [3074, 1], [3075, 3], [3076, 1], [3077, 1], [3078, 1], [3079, 1], [3080, 1], [3081, 3], [3082, 1], [3083, 3], [3084, 3], [3085, 3], [3086, 1], [3087, 3], [3088, 3], [3089, 1], [3090, 3], [3091, 3], [3092, 1], [3093, 3], [3094, 3], [3095, 3], [3096, 1], [3097, 3], [3098, 3], [3099, 1], [3100, 3], [3101, 4], [3102, 3], [3103, 1], [3104, 1], [3105, 1], [3106, 1], [3107, 1], [3108, 2], [3109, 4], [3110, 1], [3111, 3], [3112, 1], [3113, 3], [3114, 1], [3115, 3], [3116, 1], [3117, 1], [3118, 3], [3119, 1], [3120, 1], [3121, 1], [3122, 1], [3123, 1], [3124, 1], [3125, 3], [3126, 1], [3127, 1], [3128, 3], [3129, 3], [3130, 1], [3131, 1], [3132, 2], [3133, 3], [3134, 1], [3135, 4], [3136, 1], [3137, 2], [3138, 1], [3139, 1], [3140, 3], [3141, 1], [3142, 3], [3143, 1], [3144, 3], [3145, 1], [3146, 1], [3147, 1], [3148, 1], [3149, 3], [3150, 1], [3151, 3], [3152, 2], [3153, 3], [3154, 1], [3155, 3], [3156, 1], [3157, 1], [3158, 1], [3159, 1], [3160, 1], [3161, 1], [3162, 3], [3163, 4], [3164, 1], [3165, 1], [3166, 2], [3167, 3], [3168, 1], [3169, 3], [3170, 3], [3171, 4], [3172, 2], [3173, 3], [3174, 3], [3175, 5], [3176, 1], [3177, 1], [3178, 3], [3179, 1], [3180, 1], [3181, 3], [3182, 1], [3183, 1], [3184, 1], [3185, 1], [3186, 3], [3187, 4], [3188, 3], [3189, 1], [3190, 1], [3191, 3], [3192, 1], [3193, 3], [3194, 2], [3195, 3], [3196, 3], [3197, 3], [3198, 1], [3199, 1], [3200, 3], [3201, 3], [3202, 5], [3203, 3], [3204, 1], [3205, 3], [3206, 3], [3207, 4], [3208, 3], [3209, 3], [3210, 2], [3211, 1], [3212, 1], [3213, 1], [3214, 1], [3215, 2], [3216, 1], [3217, 3], [3218, 4], [3219, 1], [3220, 1], [3221, 1], [3222, 3], [3223, 1], [3224, 1], [3225, 1], [3226, 1], [3227, 1], [3228, 3], [3229, 1], [3230, 2], [3231, 1], [3232, 1], [3233, 3], [3234, 1], [3235, 1], [3236, 1], [3237, 4], [3238, 1], [3239, 1], [3240, 1], [3241, 1], [3242, 2], [3243, 3], [3244, 2], [3245, 3], [3246, 1], [3247, 4], [3248, 3], [3249, 1], [3250, 1], [3251, 1], [3252, 3], [3253, 4], [3254, 1], [3255, 2], [3256, 4], [3257, 4], [3258, 5], [3259, 1], [3260, 1], [3261, 3], [3262, 1], [3263, 1], [3264, 1], [3265, 3], [3266, 1], [3267, 1], [3268, 1], [3269, 1], [3270, 4], [3271, 1], [3272, 3], [3273, 1], [3274, 2], [3275, 3], [3276, 1], [3277, 1], [3278, 1], [3279, 1], [3280, 1], [3281, 3], [3282, 3], [3283, 3], [3284, 1], [3285, 3], [3286, 1], [3287, 2], [3288, 1], [3289, 1], [3290, 3], [3291, 1], [3292, 4], [3293, 1], [3294, 4], [3295, 3], [3296, 3], [3297, 1], [3298, 3], [3299, 1], [3300, 1], [3301, 1], [3302, 1], [3303, 1], [3304, 3], [3305, 1], [3306, 1], [3307, 1], [3308, 1], [3309, 1], [3310, 1], [3311, 2], [3312, 3], [3313, 1], [3314, 1], [3315, 3], [3316, 4], [3317, 1], [3318, 4], [3319, 3], [3320, 3], [3321, 1], [3322, 2], [3323, 1], [3324, 1], [3325, 3], [3326, 1], [3327, 3], [3328, 1], [3329, 1], [3330, 1], [3331, 3], [3332, 1], [3333, 1]];
let dataSetBytes = "";
dataSet.forEach(
    ([tokenId, tierId]) => {
        dataSetBytes += ethers.utils.solidityPack(
            ["uint8"],
            [tierId]
        ).slice(2)
    }
);

describe('NFTStaking', () => {
    it('should deploy successfully', async () => {
        const NFTStaking = await ethers.getContractFactory("NFTStaking");
        const NFT = await ethers.getContractFactory("NFT");
        const nft = await NFT.deploy();
        const nftStaking = await NFTStaking.deploy(nft.address, "0x" + dataSetBytes);
        console.log(await nftStaking.deployTransaction.wait());
        expect(await nftStaking.nft()).to.be.equal(nft.address);
    });

    it('populatePointsPerDayByTierNumber fails when called by non owner', async () => {
        const [, nonOwner] = await ethers.getSigners();
        const NFTStaking = await ethers.getContractFactory("NFTStaking");
        const NFT = await ethers.getContractFactory("NFT");
        const nft = await NFT.deploy();
        const nftStaking = await NFTStaking.deploy(nft.address, "0x" + dataSetBytes);

        const tierAndPointsPerDay = [
            [1, big(100)],
            [2, big(200)],
            [3, big(300)]
        ];

        try {
            await nftStaking.connect(nonOwner).populatePointsPerDayByTierNumber(tierAndPointsPerDay);
            assert.fail(
                "populatePointsPerDayByTierNumber successfully called by non owner"
            );
        } catch (e) {
            expect(e.message).to.include(
                "Ownable: caller is not the owner"
            );
        }
    });

    it('successfully call populatePointsPerDayByTierNumber ', async () => {
        const NFTStaking = await ethers.getContractFactory("NFTStaking");
        const NFT = await ethers.getContractFactory("NFT");
        const nft = await NFT.deploy();
        const nftStaking = await NFTStaking.deploy(nft.address, "0x" + dataSetBytes);

        const tierAndPointsPerDay = [
            [1, big(100)],
            [2, big(200)],
            [3, big(300)]
        ];

        await nftStaking.populatePointsPerDayByTierNumber(tierAndPointsPerDay);

        tierAndPointsPerDay.forEach(
            async (
                [tierNumber, pointsPerDay],
                idx
            ) => expect(await nftStaking.pointsPerDayByTierNumber(tierNumber))
                .to.be.equal(pointsPerDay)
        );
    });

    it('should not stake if id is not approved', async () => {
        const [addr1] = await ethers.getSigners();
        const NFTStaking = await ethers.getContractFactory("NFTStaking");
        const NFT = await ethers.getContractFactory("NFT");
        const nft = await NFT.deploy();
        const nftStaking = await NFTStaking.deploy(nft.address, "0x" + dataSetBytes);

        const tokenId = big(1);
        await nft.mint(addr1.address);

        try {
            await nftStaking.stake(tokenId);
            assert.fail(
                "staked with non approved is"
            );
        } catch (e) {
            expect(e.message).to.include(
                "NFTStaking::stake: staking contract is not approved for the given token id"
            );
        }
    });

    it('should successfully stake', async () => {
        const [addr1] = await ethers.getSigners();
        const NFTStaking = await ethers.getContractFactory("NFTStaking");
        const NFT = await ethers.getContractFactory("NFT");
        const nft = await NFT.deploy();
        const nftStaking = await NFTStaking.deploy(nft.address, "0x" + dataSetBytes);

        const tokenId = big(1);

        await nft.mint(addr1.address);
        await nft.approve(nftStaking.address, tokenId);

        await nftStaking.stake(tokenId);

        expect(await nft.ownerOf(tokenId))
            .to.be.equal(nftStaking.address);

        expect((await nftStaking.stakesByUser(addr1.address, 0)).tokenId)
            .to.be.equal(tokenId);

        expect((await nftStaking.stakesByUser(addr1.address, 0)).lastPointsClaimedAt)
            .to.be.not.equal(big(0));
    });

    it('should claim points', async () => {
        const [addr1] = await ethers.getSigners();
        const NFTStaking = await ethers.getContractFactory("NFTStaking");
        const NFT = await ethers.getContractFactory("NFT");
        const Point = await ethers.getContractFactory("Point");
        const nft = await NFT.deploy();
        const nftStaking = await NFTStaking.deploy(nft.address, "0x" + dataSetBytes);
        const point = await Point.attach(await nftStaking.point());

        const tokenId = big(1);

        await nftStaking.populatePointsPerDayByTierNumber([[1, 200]]);

        await nft.mint(addr1.address);
        await nft.approve(nftStaking.address, tokenId);

        await nftStaking.stake(tokenId);

        await ethers.provider.send("evm_increaseTime", [86400]);
        await ethers.provider.send("evm_mine");

        await nftStaking.claimPoints();

        expect(await point.balanceOf(addr1.address))
            .to.be.equal(big(200));
    });

    it('should fail to unstake token with wrong id', async () => {
        const [addr1] = await ethers.getSigners();
        const NFTStaking = await ethers.getContractFactory("NFTStaking");
        const NFT = await ethers.getContractFactory("NFT");
        const Point = await ethers.getContractFactory("Point");
        const nft = await NFT.deploy();
        const nftStaking = await NFTStaking.deploy(nft.address, "0x" + dataSetBytes);
        const point = await Point.attach(await nftStaking.point());

        const tokenId = big(1);

        await nftStaking.populatePointsPerDayByTierNumber([[1, 200]]);

        await nft.mint(addr1.address);
        await nft.approve(nftStaking.address, tokenId);

        await nftStaking.stake(tokenId);

        await ethers.provider.send("evm_increaseTime", [86400]);
        await ethers.provider.send("evm_mine");

        try {
            await nftStaking.unstakeById(big(2));
            assert.fail(
                "unstaked wrong token id"
            );
        } catch (e) {
            expect(e.message).to.include(
                "NFTStaking::unstake: invalid token id provided"
            );
        }
    });

    it('should unstake by id', async () => {
        const [addr1] = await ethers.getSigners();
        const NFTStaking = await ethers.getContractFactory("NFTStaking");
        const NFT = await ethers.getContractFactory("NFT");
        const Point = await ethers.getContractFactory("Point");
        const nft = await NFT.deploy();
        const nftStaking = await NFTStaking.deploy(nft.address, "0x" + dataSetBytes);
        const point = await Point.attach(await nftStaking.point());

        const tokenId = big(1);

        await nftStaking.populatePointsPerDayByTierNumber([[1, 200]]);

        await nft.mint(addr1.address);
        await nft.approve(nftStaking.address, tokenId);

        await nftStaking.stake(tokenId);

        await ethers.provider.send("evm_increaseTime", [86400]);
        await ethers.provider.send("evm_mine");

        await nftStaking.unstakeById(tokenId);

        expect(await point.balanceOf(addr1.address))
            .to.be.equal(big(200));

        expect(await nft.ownerOf(tokenId))
            .to.be.equal(addr1.address);

        // expect((await nftStaking.stakesByUser(addr1.address, 0)).tokenId)
        //     .to.be.equal(big(0));

        // expect((await nftStaking.stakesByUser(addr1.address, 0)).lastPointsClaimedAt)
        //     .to.be.not.equal(big(0));
    });

    it('should unstake all', async () => {
        const [addr1] = await ethers.getSigners();
        const NFTStaking = await ethers.getContractFactory("NFTStaking");
        const NFT = await ethers.getContractFactory("NFT");
        const Point = await ethers.getContractFactory("Point");
        const nft = await NFT.deploy();
        const nftStaking = await NFTStaking.deploy(nft.address, "0x" + dataSetBytes);
        const point = await Point.attach(await nftStaking.point());

        const tokenIds = [big(1), big(2)];

        await nftStaking.populatePointsPerDayByTierNumber([[1, 200], [3, 400]]);

        await nft.mint(addr1.address);
        await nft.mint(addr1.address);
        await nft.approve(nftStaking.address, tokenIds[0]);
        await nft.approve(nftStaking.address, tokenIds[1]);

        await nftStaking.stake(tokenIds[0]);
        await nftStaking.stake(tokenIds[1]);

        await ethers.provider.send("evm_increaseTime", [86400]);
        await ethers.provider.send("evm_mine");

        expect(await nftStaking.getPointsEarningPerDayByUser(addr1.address))
            .to.be.equal(big(600));

        await nftStaking.unstakeAll();

        expect(await point.balanceOf(addr1.address))
            .to.be.equal(big(600));

        expect(await nft.ownerOf(tokenIds[0]))
            .to.be.equal(addr1.address);

        expect(await nft.ownerOf(tokenIds[1]))
            .to.be.equal(addr1.address);

        // expect((await nftStaking.stakesByUser(addr1.address, 0)).tokenId)
        //     .to.be.equal(big(0));

        // expect((await nftStaking.stakesByUser(addr1.address, 0)).lastPointsClaimedAt)
        //     .to.be.not.equal(big(0));
    });
});